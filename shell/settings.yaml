
# HTTP 服务端参数
API:
    Port: 5010
    Addr: 127.0.0.1
    SM2PrivateKey: "vK3iPBFMwKvXfS6QG3s0fKNPjGnLy90VI+PI0kzQ3o0=" # SM2私钥
    AppIdSecret: { # 接口调用分配的 appid 和 sevret
        "19E179E5DC29C05E65B90CDE57A1C7E5" : "D91CEB11EE62219CD91CEB11EE62219C",
        "66A095861BAE55F8735199DBC45D3E8E" : "43E554621FF7BF4756F8C1ADF17F209C",
        "75C50F018B34AC0240915EC685F5961B" : "BCB3DF17A794368E1BB0352D3D2D5F50",
        "3EA25569454745D01219080B779F021F" : "41DF0E6AE27B5282C07EF5124642A352",
    }
    RequestTimestampDiff: 300 # api请求timestamp与服务器时间差异(秒)，大于差异绝对值将被拒绝

# 推理服务队列的参数
Server:
    RedisServer: "127.0.0.1:7480"
    RedisPasswd: "e18ffb7484f4d69c2acb40008471a71c"
    QueueName: "go-multinfer-synchronous-asynchronous-queue"
    RequestQueueAmount: 1 # 请求队列数量，要启动相同数量的server
    MessageTimeout: 10 # 推理计算最大等待时间
    MaxWorkers: 8 # 模型推理最大并发数

ErrCode:
    QueueTimeout: { "code": 9997, "msg": "消息队列超时" }
    UnknownApi: { "code": 9900, "msg": "未知的API" }
    InferFail: { "code": 9998, "msg": "模型推理失败" }
    ApiEntryFail: { "code": 9701, "msg": "API参数处理失败" }
    SendMsgFail: { "code": 9702, "msg": "发送队列消息失败" }
    RecvMsgFail: { "code": 9703, "msg": "接收队列消息失败" }
    UnknownApiPath: { "code": 9709, "msg": "未知的API路径" }

    SignFail: { "code": 9800, "msg": "验签失败" }
    SignFail1: { "code": 9801, "msg": "缺少参数" }
    SignFail2: { "code": 9802, "msg": "时间戳错误" }
    SignFail3: { "code": 9803, "msg": "签名算法错误" }
    SignFail5: { "code": 9805, "msg": "AppId错误" }
    SignFail6: { "code": 9806, "msg": "版本号错误" }

# 自定义参数
Customer: { # 以下 key-value 为用户自定义使用
    "Load_Bert_QA" : "0",
    "BertModelPath" : "/app/multinfer/weights/bert_qa/saved-model",
    "BertVocabPath" : "/app/multinfer/weights/bert_vocab.txt",

    "Load_Albert_QA" : "1",
    "ALBertModelPath" : "/app/multinfer/weights/keras_qa/saved-model",
    "ALBertVocabPath" : "/app/multinfer/weights/albert_vocab.txt",

    "Load_Antigen" : "1",
    "LocateModelPath" : "/app/multinfer/weights/antigen/saved-model_locate_onebox_resnet-fpn_b128_e24_0.94362", # 预训练模型路径 
    "DetposModelPath" : "/app/multinfer/weights/antigen/saved-model_detpos_5labels_vgg16_b512_e10_1.0000", # 预训练模型路径 
    "MAX_IMAGE_SIZE" : "3145728", # 图片文件最大 3MB
    "SAVE_IMAGE" : "1", # 是否保存请求的图片和结果：0 不保存存， 1 保存
    "SAVE_IMAGE_PATH" : "/app/multinfer/history/antigen", # 保存的路径 
    "WARM_UP_IMAGES" : "/app/multinfer/warmup/antigen", # 启动时模型热身的图片

    "Load_NER_pack" : "1",
    "NerPackModelPath" : "/app/multinfer/weights/ner_pack/saved-model",
    "NerPackVocabPath" : "/app/multinfer/weights/bert_vocab.txt",

    "Load_YHFace" : "1",
    "ArcfaceModelPath" : "/app/multinfer/weights/arcface/models/buffalo_l", # buffalo_l 的路径
    "Fas2ModelPath" : "/app/multinfer/weights/fas_silent_onnx", # fas2 模型 的路径
    "FACE_MAX_IMAGE_SIZE" : "3145728", # 图片文件最大 3MB
    "FACE_SAVE_IMAGE" : "1", # 是否保存请求的图片和结果：0 不保存存， 1 保存
    "FACE_SAVE_IMAGE_PATH" : "/app/multinfer/history/yhfacelib", # 保存的路径 
    "FACE_DistanceThreshold" : "-0.27", # 余弦距离 比较 threshold
    "FACE_WARM_UP_IMAGES" : "/app/multinfer/warmup/yhfacelib", # 启动时模型热身的图片
    "FACE_LimitFace" : "3", # gosearch参数 limit faces to register
    "FACE_GroupIdList": "DEFAULT", # gosearch参数 group_id list，逗号分隔多个groupid
    "FACE_Gonum": "8", # gosearch参数: go routinue 并发数
    "FACE_mongo_uri" : "mongodb://127.0.0.1:27017/",
    "FACE_mongo_user" : "ipcam",
    "FACE_mongo_pwd" : "ipcam",
}
